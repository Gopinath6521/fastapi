apiVersion: v1
items:
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.14.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.14.0"},"name":"cninodes.vpcresources.k8s.aws"},"spec":{"group":"vpcresources.k8s.aws","names":{"kind":"CNINode","listKind":"CNINodeList","plural":"cninodes","shortNames":["cnd"],"singular":"cninode"},"scope":"Cluster","versions":[{"additionalPrinterColumns":[{"description":"The features delegated to VPC resource controller","jsonPath":".spec.features","name":"Features","type":"string"}],"name":"v1alpha1","schema":{"openAPIV3Schema":{"properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"Important: Run \"make\" to regenerate code after modifying this file\nCNINodeSpec defines the desired state of CNINode","properties":{"features":{"items":{"description":"Feature is a type of feature being supported by VPC resource controller and other AWS Services","properties":{"name":{"description":"FeatureName is a type of feature name supported by AWS VPC CNI. It can be Security Group for Pods, custom networking, or others","type":"string"},"value":{"type":"string"}},"type":"object"},"type":"array"},"tags":{"additionalProperties":{"type":"string"},"description":"Additional tag key/value added to all network interfaces provisioned by the vpc-resource-controller and VPC-CNI","type":"object"}},"type":"object"},"status":{"description":"CNINodeStatus defines the managed VPC resources.","type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}
    creationTimestamp: "2025-09-10T20:35:30Z"
    generation: 1
    name: cninodes.vpcresources.k8s.aws
    resourceVersion: "1192"
    uid: f8de8db9-2147-48b5-90b2-009104edfdc5
  spec:
    conversion:
      strategy: None
    group: vpcresources.k8s.aws
    names:
      kind: CNINode
      listKind: CNINodeList
      plural: cninodes
      shortNames:
      - cnd
      singular: cninode
    scope: Cluster
    versions:
    - additionalPrinterColumns:
      - description: The features delegated to VPC resource controller
        jsonPath: .spec.features
        name: Features
        type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: |-
                Important: Run "make" to regenerate code after modifying this file
                CNINodeSpec defines the desired state of CNINode
              properties:
                features:
                  items:
                    description: Feature is a type of feature being supported by VPC
                      resource controller and other AWS Services
                    properties:
                      name:
                        description: FeatureName is a type of feature name supported
                          by AWS VPC CNI. It can be Security Group for Pods, custom
                          networking, or others
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                tags:
                  additionalProperties:
                    type: string
                  description: Additional tag key/value added to all network interfaces
                    provisioned by the vpc-resource-controller and VPC-CNI
                  type: object
              type: object
            status:
              description: CNINodeStatus defines the managed VPC resources.
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: CNINode
      listKind: CNINodeList
      plural: cninodes
      shortNames:
      - cnd
      singular: cninode
    conditions:
    - lastTransitionTime: "2025-09-10T20:35:30Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-09-10T20:35:30Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    creationTimestamp: "2025-09-10T20:38:57Z"
    generation: 1
    name: eniconfigs.crd.k8s.amazonaws.com
    resourceVersion: "924"
    uid: b5ea7f48-d5d9-43df-b1d9-3d30b1ddada9
  spec:
    conversion:
      strategy: None
    group: crd.k8s.amazonaws.com
    names:
      kind: ENIConfig
      listKind: ENIConfigList
      plural: eniconfigs
      singular: eniconfig
    scope: Cluster
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ENIConfig is the Schema for the eniconfigs API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ENIConfigSpec defines the desired state of ENIConfig
              properties:
                securityGroups:
                  items:
                    type: string
                  type: array
                subnet:
                  type: string
              required:
              - subnet
              type: object
            status:
              description: ENIConfigStatus defines the observed state of ENIConfig
              type: object
          type: object
          x-kubernetes-preserve-unknown-fields: true
      served: true
      storage: true
  status:
    acceptedNames:
      kind: ENIConfig
      listKind: ENIConfigList
      plural: eniconfigs
      singular: eniconfig
    conditions:
    - lastTransitionTime: "2025-09-10T20:38:57Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-09-10T20:38:57Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.11.3
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.11.3"},"creationTimestamp":null,"labels":{"app.kubernetes.io/name":"amazon-network-policy-controller-k8s"},"name":"policyendpoints.networking.k8s.aws"},"spec":{"group":"networking.k8s.aws","names":{"kind":"PolicyEndpoint","listKind":"PolicyEndpointList","plural":"policyendpoints","singular":"policyendpoint"},"scope":"Namespaced","versions":[{"name":"v1alpha1","schema":{"openAPIV3Schema":{"description":"PolicyEndpoint is the Schema for the policyendpoints API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"PolicyEndpointSpec defines the desired state of PolicyEndpoint","properties":{"egress":{"description":"Egress is the list of egress rules containing resolved network addresses","items":{"description":"EndpointInfo defines the network endpoint information for the policy ingress/egress","properties":{"cidr":{"description":"CIDR is the network address(s) of the endpoint","type":"string"},"except":{"description":"Except is the exceptions to the CIDR ranges mentioned above.","items":{"type":"string"},"type":"array"},"ports":{"description":"Ports is the list of ports","items":{"description":"Port contains information about the transport port/protocol","properties":{"endPort":{"description":"Endport specifies the port range port to endPort port must be defined and an integer, endPort \u003e port","format":"int32","type":"integer"},"port":{"description":"Port specifies the numerical port for the protocol. If empty applies to all ports","format":"int32","type":"integer"},"protocol":{"default":"TCP","description":"Protocol specifies the transport protocol, default TCP","type":"string"}},"type":"object"},"type":"array"}},"required":["cidr"],"type":"object"},"type":"array"},"ingress":{"description":"Ingress is the list of ingress rules containing resolved network addresses","items":{"description":"EndpointInfo defines the network endpoint information for the policy ingress/egress","properties":{"cidr":{"description":"CIDR is the network address(s) of the endpoint","type":"string"},"except":{"description":"Except is the exceptions to the CIDR ranges mentioned above.","items":{"type":"string"},"type":"array"},"ports":{"description":"Ports is the list of ports","items":{"description":"Port contains information about the transport port/protocol","properties":{"endPort":{"description":"Endport specifies the port range port to endPort port must be defined and an integer, endPort \u003e port","format":"int32","type":"integer"},"port":{"description":"Port specifies the numerical port for the protocol. If empty applies to all ports","format":"int32","type":"integer"},"protocol":{"default":"TCP","description":"Protocol specifies the transport protocol, default TCP","type":"string"}},"type":"object"},"type":"array"}},"required":["cidr"],"type":"object"},"type":"array"},"podIsolation":{"description":"PodIsolation specifies whether the pod needs to be isolated for a particular traffic direction Ingress or Egress, or both. If default isolation is not specified, and there are no ingress/egress rules, then the pod is not isolated from the point of view of this policy. This follows the NetworkPolicy spec.PolicyTypes.","items":{"description":"PolicyType string describes the NetworkPolicy type This type is beta-level in 1.8","type":"string"},"type":"array"},"podSelector":{"description":"PodSelector is the podSelector from the policy resource","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"podSelectorEndpoints":{"description":"PodSelectorEndpoints contains information about the pods matching the podSelector","items":{"description":"PodEndpoint defines the summary information for the pods","properties":{"hostIP":{"description":"HostIP is the IP address of the host the pod is currently running on","type":"string"},"name":{"description":"Name is the pod name","type":"string"},"namespace":{"description":"Namespace is the pod namespace","type":"string"},"podIP":{"description":"PodIP is the IP address of the pod","type":"string"}},"required":["hostIP","name","namespace","podIP"],"type":"object"},"type":"array"},"policyRef":{"description":"PolicyRef is a reference to the Kubernetes NetworkPolicy resource.","properties":{"name":{"description":"Name is the name of the Policy","type":"string"},"namespace":{"description":"Namespace is the namespace of the Policy","type":"string"}},"required":["name","namespace"],"type":"object"}},"required":["policyRef"],"type":"object"},"status":{"description":"PolicyEndpointStatus defines the observed state of PolicyEndpoint","type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
    creationTimestamp: "2025-09-10T20:35:30Z"
    generation: 1
    labels:
      app.kubernetes.io/name: amazon-network-policy-controller-k8s
    name: policyendpoints.networking.k8s.aws
    resourceVersion: "1189"
    uid: 8f2c82f2-184f-4f9d-ba56-e1404e76255c
  spec:
    conversion:
      strategy: None
    group: networking.k8s.aws
    names:
      kind: PolicyEndpoint
      listKind: PolicyEndpointList
      plural: policyendpoints
      singular: policyendpoint
    scope: Namespaced
    versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: PolicyEndpoint is the Schema for the policyendpoints API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PolicyEndpointSpec defines the desired state of PolicyEndpoint
              properties:
                egress:
                  description: Egress is the list of egress rules containing resolved
                    network addresses
                  items:
                    description: EndpointInfo defines the network endpoint information
                      for the policy ingress/egress
                    properties:
                      cidr:
                        description: CIDR is the network address(s) of the endpoint
                        type: string
                      except:
                        description: Except is the exceptions to the CIDR ranges mentioned
                          above.
                        items:
                          type: string
                        type: array
                      ports:
                        description: Ports is the list of ports
                        items:
                          description: Port contains information about the transport
                            port/protocol
                          properties:
                            endPort:
                              description: Endport specifies the port range port to
                                endPort port must be defined and an integer, endPort
                                > port
                              format: int32
                              type: integer
                            port:
                              description: Port specifies the numerical port for the
                                protocol. If empty applies to all ports
                              format: int32
                              type: integer
                            protocol:
                              default: TCP
                              description: Protocol specifies the transport protocol,
                                default TCP
                              type: string
                          type: object
                        type: array
                    required:
                    - cidr
                    type: object
                  type: array
                ingress:
                  description: Ingress is the list of ingress rules containing resolved
                    network addresses
                  items:
                    description: EndpointInfo defines the network endpoint information
                      for the policy ingress/egress
                    properties:
                      cidr:
                        description: CIDR is the network address(s) of the endpoint
                        type: string
                      except:
                        description: Except is the exceptions to the CIDR ranges mentioned
                          above.
                        items:
                          type: string
                        type: array
                      ports:
                        description: Ports is the list of ports
                        items:
                          description: Port contains information about the transport
                            port/protocol
                          properties:
                            endPort:
                              description: Endport specifies the port range port to
                                endPort port must be defined and an integer, endPort
                                > port
                              format: int32
                              type: integer
                            port:
                              description: Port specifies the numerical port for the
                                protocol. If empty applies to all ports
                              format: int32
                              type: integer
                            protocol:
                              default: TCP
                              description: Protocol specifies the transport protocol,
                                default TCP
                              type: string
                          type: object
                        type: array
                    required:
                    - cidr
                    type: object
                  type: array
                podIsolation:
                  description: PodIsolation specifies whether the pod needs to be
                    isolated for a particular traffic direction Ingress or Egress,
                    or both. If default isolation is not specified, and there are
                    no ingress/egress rules, then the pod is not isolated from the
                    point of view of this policy. This follows the NetworkPolicy spec.PolicyTypes.
                  items:
                    description: PolicyType string describes the NetworkPolicy type
                      This type is beta-level in 1.8
                    type: string
                  type: array
                podSelector:
                  description: PodSelector is the podSelector from the policy resource
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: A label selector requirement is a selector that
                          contains values, a key, and an operator that relates the
                          key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: operator represents a key's relationship
                              to a set of values. Valid operators are In, NotIn, Exists
                              and DoesNotExist.
                            type: string
                          values:
                            description: values is an array of string values. If the
                              operator is In or NotIn, the values array must be non-empty.
                              If the operator is Exists or DoesNotExist, the values
                              array must be empty. This array is replaced during a
                              strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: matchLabels is a map of {key,value} pairs. A single
                        {key,value} in the matchLabels map is equivalent to an element
                        of matchExpressions, whose key field is "key", the operator
                        is "In", and the values array contains only "value". The requirements
                        are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                podSelectorEndpoints:
                  description: PodSelectorEndpoints contains information about the
                    pods matching the podSelector
                  items:
                    description: PodEndpoint defines the summary information for the
                      pods
                    properties:
                      hostIP:
                        description: HostIP is the IP address of the host the pod
                          is currently running on
                        type: string
                      name:
                        description: Name is the pod name
                        type: string
                      namespace:
                        description: Namespace is the pod namespace
                        type: string
                      podIP:
                        description: PodIP is the IP address of the pod
                        type: string
                    required:
                    - hostIP
                    - name
                    - namespace
                    - podIP
                    type: object
                  type: array
                policyRef:
                  description: PolicyRef is a reference to the Kubernetes NetworkPolicy
                    resource.
                  properties:
                    name:
                      description: Name is the name of the Policy
                      type: string
                    namespace:
                      description: Namespace is the namespace of the Policy
                      type: string
                  required:
                  - name
                  - namespace
                  type: object
              required:
              - policyRef
              type: object
            status:
              description: PolicyEndpointStatus defines the observed state of PolicyEndpoint
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
  status:
    acceptedNames:
      kind: PolicyEndpoint
      listKind: PolicyEndpointList
      plural: policyendpoints
      singular: policyendpoint
    conditions:
    - lastTransitionTime: "2025-09-10T20:35:30Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-09-10T20:35:30Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1alpha1
- apiVersion: apiextensions.k8s.io/v1
  kind: CustomResourceDefinition
  metadata:
    annotations:
      controller-gen.kubebuilder.io/version: v0.18.0
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.18.0"},"name":"securitygrouppolicies.vpcresources.k8s.aws"},"spec":{"group":"vpcresources.k8s.aws","names":{"kind":"SecurityGroupPolicy","listKind":"SecurityGroupPolicyList","plural":"securitygrouppolicies","shortNames":["sgp"],"singular":"securitygrouppolicy"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"description":"The security group IDs to apply to the elastic network interface of pods that match this policy","jsonPath":".spec.securityGroups.groupIds","name":"Security-Group-Ids","type":"string"}],"name":"v1beta1","schema":{"openAPIV3Schema":{"description":"Custom Resource Definition for applying security groups to pods","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"SecurityGroupPolicySpec defines the desired state of SecurityGroupPolicy","properties":{"podSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"},"securityGroups":{"description":"GroupIds contains the list of security groups that will be applied to the network interface of the pod matching the criteria.","properties":{"groupIds":{"description":"Groups is the list of EC2 Security Groups Ids that need to be applied to the ENI of a Pod.","items":{"type":"string"},"minItems":1,"type":"array"}},"type":"object"},"serviceAccountSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}},"required":["key","operator"],"type":"object"},"type":"array","x-kubernetes-list-type":"atomic"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{}}]}}
    creationTimestamp: "2025-09-10T20:35:30Z"
    generation: 1
    name: securitygrouppolicies.vpcresources.k8s.aws
    resourceVersion: "1191"
    uid: 17ba9c74-9e0a-49b5-a203-6f50c2502e16
  spec:
    conversion:
      strategy: None
    group: vpcresources.k8s.aws
    names:
      kind: SecurityGroupPolicy
      listKind: SecurityGroupPolicyList
      plural: securitygrouppolicies
      shortNames:
      - sgp
      singular: securitygrouppolicy
    scope: Namespaced
    versions:
    - additionalPrinterColumns:
      - description: The security group IDs to apply to the elastic network interface
          of pods that match this policy
        jsonPath: .spec.securityGroups.groupIds
        name: Security-Group-Ids
        type: string
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: Custom Resource Definition for applying security groups to
            pods
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: SecurityGroupPolicySpec defines the desired state of SecurityGroupPolicy
              properties:
                podSelector:
                  description: |-
                    A label selector is a label query over a set of resources. The result of matchLabels and
                    matchExpressions are ANDed. An empty label selector matches all objects. A null
                    label selector matches no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                securityGroups:
                  description: GroupIds contains the list of security groups that
                    will be applied to the network interface of the pod matching the
                    criteria.
                  properties:
                    groupIds:
                      description: Groups is the list of EC2 Security Groups Ids that
                        need to be applied to the ENI of a Pod.
                      items:
                        type: string
                      minItems: 1
                      type: array
                  type: object
                serviceAccountSelector:
                  description: |-
                    A label selector is a label query over a set of resources. The result of matchLabels and
                    matchExpressions are ANDed. An empty label selector matches all objects. A null
                    label selector matches no objects.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements.
                        The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies
                              to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
  status:
    acceptedNames:
      kind: SecurityGroupPolicy
      listKind: SecurityGroupPolicyList
      plural: securitygrouppolicies
      shortNames:
      - sgp
      singular: securitygrouppolicy
    conditions:
    - lastTransitionTime: "2025-09-10T20:35:30Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-09-10T20:35:30Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
    storedVersions:
    - v1beta1
kind: List
metadata:
  resourceVersion: ""
